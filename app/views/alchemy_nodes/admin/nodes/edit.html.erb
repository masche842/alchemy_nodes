<%- content_for(:subnav_additions) do -%>
  <%- @locked_content_frames.each do |contentable| -%>
    <%- if @node == contentable -%>
      <%= render :partial => 'contentable_status' %>
    <%- else -%>
      Locked Pages
    <%- end -%>
  <%- end -%>
<%- end -%>

<%- content_for(:toolbar) do -%>

  <%= render 'alchemy/admin/partials/language_tree_select' %>

  <div id="toolbar_buttons">
    <div class="button_with_label">
      <%= form_tag alchemy_nodes.unlock_admin_node_path(@node, :redirect_to => nodeables_path(@node)), :id => 'unlock_page_form' do %>
        <button class="icon_button" title="<%= t('explain_unlocking') %>">
          <%= render_icon('close') %>
        </button>
        <label><%= t("unlock_page") %></label>
      <% end %>
    </div>

      <div class="button_with_label">
        <%= form_tag alchemy_nodes.visit_admin_node_path(@node), :id => 'visit_page_form' do %>
          <button class="icon_button" title="<%= t('Visit page') %>">
            <%= render_icon('visit_page') %>
          </button>
          <label><%= t("Visit page") %></label>
        <% end %>
      </div>


    <%- if configuration(:cache_pages) -%>
      <div class="button_with_label">
        <%= form_tag alchemy_nodes.publish_admin_node_path(@node), :id => 'publish_page_form' do -%>
          <button class="icon_button" title="<%= t('explain_publishing') %>">
            <%= render_icon('publish') %>
          </button>
          <label><%= t("Publish page") %></label>
        <% end -%>
      </div>
    <%- end -%>
  </div>
  <div id="toolbar_buttons_right">
    <div class="button_with_label" id="show_preview_window">
      <%= link_to_function(
            render_icon('preview_window'),
            "Alchemy.openPreviewWindow()",
            {
              :title => t('Show Preview Window'),
              :class => 'icon_button'
            }
          ) %>
      <label><%= t('Show Preview Window') %></label>
    </div>
    <div class="button_with_label" id="show_element_window">
      <%= link_to_function(
            render_icon('element_window'),
            "Alchemy.openElementsWindow()",
            {
              :title => t('Show Elements Window'),
              :class => 'icon_button'
            }
          ) %>
      <label><%= t('Show Elements Window') %></label>
    </div>
  </div>
<%- end -%>

<%- content_for :javascripts do -%>
  <%= tinymce_javascript_tags %>
  <script type="text/javascript" charset="utf-8">

    Alchemy.openPreviewWindow = function () {
      Alchemy.PreviewWindow.init('<%= alchemy_nodes.admin_node_path(@node) %>', '<%= t("Page Preview") -%>');
    }

    Alchemy.openElementsWindow = function () {
      Alchemy.ElementsWindow.init('<%= alchemy.admin_elements_path(:container_id => @container.id, :container_type => AlchemyNodes::Container) -%>', {
        texts:{
          title:'<%= t("Elements") -%>',
          dirtyTitle:'<%= t("Warning!") -%>',
          dirtyMessage:'<%= t(:element_dirty_close_window_notice) -%>',
          okLabel:'<%= t("Yes") -%>',
          cancelLabel:'<%= t("No") -%>'
        },
        toolbarButtons:[
          {
            title:'<%= t("New Element") -%>',
            label:'<%= t("New Element") -%>',
            iconClass:'new_element',
            onClick:function () {
              Alchemy.openWindow(
                '<%= alchemy.new_admin_element_path(:container_id => @container.id, :container_type => AlchemyNodes::Container) -%>',
                '<%= t("New Element") -%>',
                '320',
                '120',
                false,
                true,
                true
              );
            }
          },
          {
            title:'<%= t("Clipboard") -%>',
            label:'<%= t("Show clipboard") -%>',
            iconClass:'clipboard<%= clipboard_empty?("elements") ? "" : " full" -%>',
            buttonId:'clipboard_button',
            onClick:function () {
              Alchemy.openWindow(
                '<%= alchemy.admin_clipboard_path(:remarkable_type => "elements") -%>',
                '<%= t("Clipboard") -%>',
                '380',
                '270',
                false,
                true,
                true
              );
            }
          },
          {
            title:'<%= t("Show trash") -%>',
            label:'<%= t("Show trash") -%>',
            iconClass:'trash<%= trash_empty?("elements") ? "" : " full" -%>',
            buttonId:'element_trash_button',
            onClick:function () {
              Alchemy.openTrashWindow(<%= @container.id %>, '<%= t("Trash") -%>');
            }
          }
        ]
      }, function () {
        Alchemy.SortableElements(<%= @node.id %>, '<%= form_authenticity_token %>');
        Alchemy.ElementEditorSelector.init();
        Alchemy.SelectBox('.element_editor select');
        Alchemy.Tinymce.init(function () {
          Alchemy.ElementDirtyObserver('#element_area');
        });
        jQuery('#cells').tabs();
        jQuery('#cells').tabs('paging', { follow:true, followOnSelect:true });
      });
    }

    jQuery(document).ready(function ($) {
      var texts = {
        title:'<%= t("Warning!") %>',
        message:'<%= t(:element_dirty_page_leave_warning) %>',
        okLabel:'<%= t("Yes") %>',
        cancelLabel:'<%= t("No") %>'
      };
      $('#unlock_page_form, #visit_page_form, #publish_page_form').on('submit', function (event) {
        var not_dirty = Alchemy.checkPageDirtyness(this, texts);
        if (!not_dirty) Alchemy.pleaseWaitOverlay(false);
        return not_dirty;
      });
      Alchemy.PageLeaveObserver(texts);
      Alchemy.openElementsWindow();
      Alchemy.openPreviewWindow();
    });

  </script>
<%- end -%>
